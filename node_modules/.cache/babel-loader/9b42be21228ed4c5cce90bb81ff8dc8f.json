{"ast":null,"code":"var _jsxFileName = \"/home/parth/Github/Eth-bct/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport Greeter from './artifacts/contracts/Greeter.sol/Greeter.json'; //import Token from './artifacts/contracts/Token.sol/Token.json'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst greeterAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\"; //const tokenAddress = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\"\n\nfunction App() {\n  _s();\n\n  const [greeting, setGreetingValue] = useState(); //const [userAccount, setUserAccount] = useState()\n  //const [amount, setAmount] = useState()\n\n  async function requestAccount() {\n    await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n  }\n\n  async function fetchGreeting() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      console.log({\n        provider\n      });\n      const contract = new ethers.Contract(greeterAddress, Greeter.abi, provider);\n\n      try {\n        const data = await contract.greet();\n        console.log('data: ', data);\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n  /*async function getBalance() {\n    if (typeof window.ethereum !== 'undefined') {\n      const [account] = await window.ethereum.request({ method: 'eth_requestAccounts' })\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(tokenAddress, Token.abi, provider)\n      const balance = await contract.balanceOf(account);\n      console.log(\"Balance: \", balance.toString());\n    }\n  }*/\n\n\n  async function setGreeting() {\n    if (!greeting) return;\n\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      console.log({\n        provider\n      });\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(greeterAddress, Greeter.abi, signer);\n      const transaction = await contract.setGreeting(greeting);\n      await transaction.wait();\n      fetchGreeting();\n    }\n  }\n  /*async function sendCoins() {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(tokenAddress, Token.abi, signer);\n      const transaction = await contract.transfer(userAccount, amount);\n      await transaction.wait();\n      console.log(`${amount} Coins successfully sent to ${userAccount}`);\n    }\n  }*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchGreeting,\n        children: \"Fetch Greeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setGreeting,\n        children: \"Set Greeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setGreetingValue(e.target.value),\n        placeholder: \"Set greeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"ssJ+r0h47BdXS1rZN8gxuQdI/4c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/parth/Github/Eth-bct/src/App.js"],"names":["useState","ethers","Greeter","greeterAddress","App","greeting","setGreetingValue","requestAccount","window","ethereum","request","method","fetchGreeting","provider","providers","Web3Provider","console","log","contract","Contract","abi","data","greet","err","setGreeting","signer","getSigner","transaction","wait","e","target","value"],"mappings":";;;AAAE,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,OAAP,MAAoB,gDAApB,C,CACA;;;AAEA,MAAMC,cAAc,GAAG,4CAAvB,C,CACA;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,gBAAX,IAA+BN,QAAQ,EAA7C,CADa,CAEb;AACA;;AAEA,iBAAeO,cAAf,GAAgC;AAC9B,UAAMC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAxB,CAAN;AACD;;AAED,iBAAeC,aAAf,GAA+B;AAC7B,QAAI,OAAOJ,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AAC1C,YAAMI,QAAQ,GAAG,IAAIZ,MAAM,CAACa,SAAP,CAAiBC,YAArB,CAAkCP,MAAM,CAACC,QAAzC,CAAjB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEJ,QAAAA;AAAF,OAAZ;AACA,YAAMK,QAAQ,GAAG,IAAIjB,MAAM,CAACkB,QAAX,CAAoBhB,cAApB,EAAoCD,OAAO,CAACkB,GAA5C,EAAiDP,QAAjD,CAAjB;;AACA,UAAI;AACF,cAAMQ,IAAI,GAAG,MAAMH,QAAQ,CAACI,KAAT,EAAnB;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBI,IAAtB;AACD,OAHD,CAGE,OAAOE,GAAP,EAAY;AACZP,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBM,GAAvB;AACD;AACF;AACF;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEI,iBAAeC,WAAf,GAA6B;AAC3B,QAAI,CAACnB,QAAL,EAAe;;AACf,QAAI,OAAOG,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AAC1C,YAAMF,cAAc,EAApB;AACA,YAAMM,QAAQ,GAAG,IAAIZ,MAAM,CAACa,SAAP,CAAiBC,YAArB,CAAkCP,MAAM,CAACC,QAAzC,CAAjB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEJ,QAAAA;AAAF,OAAZ;AACA,YAAMY,MAAM,GAAGZ,QAAQ,CAACa,SAAT,EAAf;AACA,YAAMR,QAAQ,GAAG,IAAIjB,MAAM,CAACkB,QAAX,CAAoBhB,cAApB,EAAoCD,OAAO,CAACkB,GAA5C,EAAiDK,MAAjD,CAAjB;AACA,YAAME,WAAW,GAAG,MAAMT,QAAQ,CAACM,WAAT,CAAqBnB,QAArB,CAA1B;AACA,YAAMsB,WAAW,CAACC,IAAZ,EAAN;AACAhB,MAAAA,aAAa;AACd;AACF;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEI,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEA,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEY,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,QAAQ,EAAEK,CAAC,IAAIvB,gBAAgB,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtC;AAAwD,QAAA,WAAW,EAAC;AAApE;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GApEQ3B,G;;KAAAA,G;AAsET,eAAeA,GAAf","sourcesContent":["  import './App.css';\n  import { useState } from 'react';\n  import { ethers } from 'ethers'\n  import Greeter from './artifacts/contracts/Greeter.sol/Greeter.json'\n  //import Token from './artifacts/contracts/Token.sol/Token.json'\n\n  const greeterAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\"\n  //const tokenAddress = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\"\n\n  function App() {\n    const [greeting, setGreetingValue] = useState()\n    //const [userAccount, setUserAccount] = useState()\n    //const [amount, setAmount] = useState()\n\n    async function requestAccount() {\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\n    }\n\n    async function fetchGreeting() {\n      if (typeof window.ethereum !== 'undefined') {\n        const provider = new ethers.providers.Web3Provider(window.ethereum)\n        console.log({ provider })\n        const contract = new ethers.Contract(greeterAddress, Greeter.abi, provider)\n        try {\n          const data = await contract.greet()\n          console.log('data: ', data)\n        } catch (err) {\n          console.log(\"Error: \", err)\n        }\n      }    \n    }\n\n    /*async function getBalance() {\n      if (typeof window.ethereum !== 'undefined') {\n        const [account] = await window.ethereum.request({ method: 'eth_requestAccounts' })\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const contract = new ethers.Contract(tokenAddress, Token.abi, provider)\n        const balance = await contract.balanceOf(account);\n        console.log(\"Balance: \", balance.toString());\n      }\n    }*/\n\n    async function setGreeting() {\n      if (!greeting) return\n      if (typeof window.ethereum !== 'undefined') {\n        await requestAccount()\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        console.log({ provider })\n        const signer = provider.getSigner()\n        const contract = new ethers.Contract(greeterAddress, Greeter.abi, signer)\n        const transaction = await contract.setGreeting(greeting)\n        await transaction.wait()\n        fetchGreeting()\n      }\n    }\n\n    /*async function sendCoins() {\n      if (typeof window.ethereum !== 'undefined') {\n        await requestAccount()\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(tokenAddress, Token.abi, signer);\n        const transaction = await contract.transfer(userAccount, amount);\n        await transaction.wait();\n        console.log(`${amount} Coins successfully sent to ${userAccount}`);\n      }\n    }*/\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <button onClick={fetchGreeting}>Fetch Greeting</button>\n          <button onClick={setGreeting}>Set Greeting</button>\n          <input onChange={e => setGreetingValue(e.target.value)} placeholder=\"Set greeting\" />\n        </header>\n      </div>\n    );\n  }\n\n  export default App;\n"]},"metadata":{},"sourceType":"module"}